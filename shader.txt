struct VertexOutput {
    @builtin(position) position: vec4<f32>;
};

struct FragmentOutput {
    @location(0) color: vec4<f32>;
};

@vertex
fn vertex_main(@builtin(vertex_index) vertexIndex: u32) -> VertexOutput {
    var output: VertexOutput;

    // 手动定义三角形的顶点位置
    if (vertexIndex == 0u) {
        output.position = vec4(0.0, 0.5, 0.0, 1.0); // 顶点0
    } else if (vertexIndex == 1u) {
        output.position = vec4(-0.5, -0.5, 0.0, 1.0); // 顶点1
    } else {
        output.position = vec4(0.5, -0.5, 0.0, 1.0); // 顶点2
    }

    return output;
}

@fragment
fn fragment_main(input: VertexOutput) -> FragmentOutput {
    var output: FragmentOutput;
    output.color = vec4(1.0, 0.0, 0.0, 1.0); // 输出红色
    return output;
}
